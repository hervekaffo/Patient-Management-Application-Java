/*
 * Herve Taning Kaffo & Kevin Montreal.
 * Final group Project
 * Rapid Prototype
 */

import java.awt.image.ImageObserver;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
//*****************************************
import java.text.ParseException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.text.MaskFormatter;

import java.util.Calendar;
import java.text.*;
//************************
/**
 *
 * @author Herve
 */
public class Main_Windows extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    /**
     * Creates new form Main_Windows
     */
    public Main_Windows() {
        
        
        
        initComponents();
        refresh_table(pat_Table, "Patient");
        refresh_table(details_table, "Details"); 
        refresh_table(medication_table, "Medication"); 
        refresh_table(condition_table, "condition");
        refresh_table(cp_table, "Care_Provider");
        fillConboPatId("Patient","Patient_Id",Pat_Id1);
        fillConboPatId("Patient","Patient_Id",Pat_Id2);
        fillConboPatId("Patient","Patient_Id",Pat_Id3);
        Pat_Id.setVisible(false);
        Details_Id.setVisible(false);
        Medication_Id.setVisible(false);
        condition_Id.setVisible(false);
        cp_Id.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        title = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Last_Name = new javax.swing.JTextField();
        First_Name1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Date_Of_Birth = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Address_Street = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        Address_City = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        Address_Zip = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        //Phone = new javax.swing.JTextField();
		try{
        Phone = new JPhoneNumberFormattedTextField();
		}catch(Exception e){}
        jLabel12 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        email_status = new javax.swing.JLabel();
        save_btn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        pat_Table = new javax.swing.JTable();
        insert_Btn = new javax.swing.JButton();
        Update_btn = new javax.swing.JButton();
        Pat_Id = new javax.swing.JTextField();
        Delete_btn = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        image = new javax.swing.JLabel();
        picture_btn = new javax.swing.JButton();
        image_path = new javax.swing.JTextField();
        date_status = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        blood_Type = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        height = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Pat_Id1 = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        Pat_Name = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        details_table = new javax.swing.JTable();
        save_btn1 = new javax.swing.JButton();
        update_btn1 = new javax.swing.JButton();
        delete_Btn = new javax.swing.JButton();
        refresh_btn1 = new javax.swing.JButton();
        Details_Id = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        Pat_Id2 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        Pat_Name1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        Medication_Id = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        medication = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        medication_date = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        medication_chronic = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        medication_note = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        medication_table = new javax.swing.JTable();
        Delete_btn3 = new javax.swing.JButton();
        Update_btn3 = new javax.swing.JButton();
        insert_Btn3 = new javax.swing.JButton();
        save_btn4 = new javax.swing.JButton();
        date_status1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        Pat_Id3 = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        Pat_Name2 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        condition_Id = new javax.swing.JTextField();
        condition = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        cond_onset_date = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        condition_chronic = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        condition_note = new javax.swing.JTextArea();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        condition_table = new javax.swing.JTable();
        Delete_btn2 = new javax.swing.JButton();
        Update_btn2 = new javax.swing.JButton();
        insert_Btn2 = new javax.swing.JButton();
        save_btn3 = new javax.swing.JButton();
        date_status2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        cp_title = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        cp_Last_Name = new javax.swing.JTextField();
        cp_First_Name = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        //cp_phone = new javax.swing.JTextField();
		try{
        cp_phone = new JPhoneNumberFormattedTextField();
		}catch(Exception e){}
        jLabel42 = new javax.swing.JLabel();
        cp_email = new javax.swing.JTextField();
        email_status1 = new javax.swing.JLabel();
        save_btn2 = new javax.swing.JButton();
        insert_Btn1 = new javax.swing.JButton();
        Update_btn1 = new javax.swing.JButton();
        cp_Id = new javax.swing.JTextField();
        Delete_btn1 = new javax.swing.JButton();
        cp_speciality = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        cp_table = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Patient Infirmation");

        jLabel2.setText("Title:");

        title.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr", "Ms", "M.", "Dr" }));
        title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleActionPerformed(evt);
            }
        });

        jLabel3.setText("Gender");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Male");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Female");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Last Name :  ");

        jLabel5.setText("Date Of Birth : ");

        Last_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Last_NameActionPerformed(evt);
            }
        });

        First_Name1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                First_Name1ActionPerformed(evt);
            }
        });

        jLabel6.setText("First Name :  ");

        Date_Of_Birth.setText("mm-dd-yyyy");
        Date_Of_Birth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Date_Of_BirthMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Date_Of_BirthMouseExited(evt);
            }
        });
        Date_Of_Birth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Date_Of_BirthActionPerformed(evt);
            }
        });

        jPanel3.setName("Contact and Address"); // NOI18N

        jLabel7.setText("Address : ");

        Address_Street.setColumns(20);
        Address_Street.setRows(5);
        jScrollPane1.setViewportView(Address_Street);

        jLabel8.setText("City  : ");

        Address_City.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Address_CityActionPerformed(evt);
            }
        });

        jLabel9.setText("State :");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Oklahoma", "Texas", "Kansas", "Ccolorado", "Maryland", "Washington", "Delaware", "Virginia", "Georgia", "California", "Florida", " " }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel10.setText("Zip Code :");

        Address_Zip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Address_ZipActionPerformed(evt);
            }
        });

        jLabel11.setText("Phone Number :");

        Phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneActionPerformed(evt);
            }
        });

        jLabel12.setText("E-Mail: ");

        Email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EmailMouseExited(evt);
            }
        });
        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });

        email_status.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(Address_Zip, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Address_City, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(email_status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Email, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Address_City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Address_Zip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(email_status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        save_btn.setText("Save ");
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });

        pat_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pat_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pat_TableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pat_TableMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(pat_Table);

        insert_Btn.setText("Refresh table ");
        insert_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_BtnActionPerformed(evt);
            }
        });

        Update_btn.setText("Update");
        Update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_btnActionPerformed(evt);
            }
        });

        Pat_Id.setEditable(false);

        Delete_btn.setText("Delete");
        Delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Clicked(evt);
            }
        });

        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jLabel33.setText("Search");

        jDesktopPane1.setLayer(image, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );

        picture_btn.setText("Attach Picture...");
        picture_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picture_btnActionPerformed(evt);
            }
        });

        date_status.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(First_Name1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Last_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(59, 59, 59)
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jRadioButton1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jRadioButton2)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Date_Of_Birth, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(date_status, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(68, 68, 68)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(image_path, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(picture_btn)
                                .addGap(10, 10, 10)))
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(Pat_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(88, 88, 88)
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(insert_Btn)
                                .addGap(18, 18, 18)
                                .addComponent(Update_btn)
                                .addGap(37, 37, 37)
                                .addComponent(Delete_btn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 739, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jLabel3)
                                    .addComponent(jRadioButton2))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(Last_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(First_Name1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(Date_Of_Birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(picture_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(image_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Pat_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(date_status, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_btn)
                    .addComponent(insert_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update_btn)
                    .addComponent(Delete_btn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 125, Short.MAX_VALUE))
        );

        Last_Name.getAccessibleContext().setAccessibleName("Last_Name");

        jTabbedPane1.addTab("Personal Info", jPanel1);

        jLabel13.setText("Name : ");

        blood_Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "B+", "AB", "O", "Rh+", "Rh-" }));
        blood_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blood_TypeActionPerformed(evt);
            }
        });

        jLabel14.setText("Organ Donor");

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("Yes");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("No");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jLabel15.setText("HIV Status");

        buttonGroup3.add(jRadioButton5);
        jRadioButton5.setText("Positive");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        buttonGroup3.add(jRadioButton6);
        jRadioButton6.setText("Negative");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jLabel16.setText("Height (Inches)");

        jLabel17.setText("Weight (Lbs)");

        jLabel18.setText("Blood Type ");

        Pat_Id1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        Pat_Id1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pat_Id1ActionPerformed(evt);
            }
        });

        jLabel19.setText("Patient Id");

        Pat_Name.setEditable(false);

        details_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        details_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                details_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(details_table);

        save_btn1.setText("Save");
        save_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btn1ActionPerformed(evt);
            }
        });

        update_btn1.setText("Update");
        update_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btn1ActionPerformed(evt);
            }
        });

        delete_Btn.setText("Delete");
        delete_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_BtnActionPerformed(evt);
            }
        });

        refresh_btn1.setText("Refresh Table");
        refresh_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_btn1ActionPerformed(evt);
            }
        });

        Details_Id.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton6)
                            .addComponent(jRadioButton5)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(blood_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Pat_Id1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(jLabel13))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jRadioButton4)
                                        .addComponent(jRadioButton3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Pat_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(24, 24, 24)
                                .addComponent(height, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(save_btn1)
                        .addGap(33, 33, 33)
                        .addComponent(update_btn1)
                        .addGap(46, 46, 46)
                        .addComponent(delete_Btn)
                        .addGap(49, 49, 49)
                        .addComponent(refresh_btn1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(Details_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(362, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(Details_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pat_Id1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pat_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blood_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton4)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jRadioButton5)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton6)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel17))
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_btn1)
                    .addComponent(update_btn1)
                    .addComponent(delete_Btn)
                    .addComponent(refresh_btn1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(133, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Blood Detail", jPanel2);

        Pat_Id2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        Pat_Id2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pat_Id2ActionPerformed(evt);
            }
        });

        jLabel20.setText("Patient Id");

        Pat_Name1.setEditable(false);

        jLabel21.setText("Name : ");

        Medication_Id.setEditable(false);

        jLabel22.setText("Medication ");

        jLabel23.setText("Date");

        medication_date.setText("mm-dd-yyyy");
        medication_date.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medication_dateMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                medication_dateMouseExited(evt);
            }
        });

        jLabel24.setText("Chronic");

        jLabel25.setText("Note");

        medication_note.setColumns(20);
        medication_note.setRows(5);
        jScrollPane4.setViewportView(medication_note);

        medication_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        medication_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medication_tableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(medication_table);

        Delete_btn3.setText("Delete");
        Delete_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_btn3Delete_Clicked(evt);
            }
        });

        Update_btn3.setText("Update");
        Update_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_btn3ActionPerformed(evt);
            }
        });

        insert_Btn3.setText("Refresh table ");
        insert_Btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_Btn3ActionPerformed(evt);
            }
        });

        save_btn4.setText("Save ");
        save_btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btn4ActionPerformed(evt);
            }
        });

        date_status1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(Medication_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(24, 24, 24)
                                .addComponent(medication, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Pat_Id2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Pat_Name1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addGap(24, 24, 24)
                                        .addComponent(medication_chronic, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addGap(24, 24, 24)
                                        .addComponent(medication_date, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(67, 67, 67)
                                .addComponent(jLabel25)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(date_status1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(save_btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(insert_Btn3)
                        .addGap(18, 18, 18)
                        .addComponent(Update_btn3)
                        .addGap(37, 37, 37)
                        .addComponent(Delete_btn3)))
                .addContainerGap(415, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(Medication_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pat_Id2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pat_Name1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medication_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(date_status1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(medication_chronic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_btn4)
                    .addComponent(insert_Btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update_btn3)
                    .addComponent(Delete_btn3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Medication", jPanel4);

        Pat_Id3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        Pat_Id3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pat_Id3ActionPerformed(evt);
            }
        });

        jLabel26.setText("Patient Id");

        Pat_Name2.setEditable(false);

        jLabel27.setText("Name : ");

        jLabel28.setText("Condition");

        cond_onset_date.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cond_onset_dateMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cond_onset_dateMouseExited(evt);
            }
        });

        jLabel29.setText("Onset Date");

        jLabel30.setText("Chronic");

        condition_note.setColumns(20);
        condition_note.setRows(5);
        jScrollPane6.setViewportView(condition_note);

        jLabel31.setText("Note");

        condition_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        condition_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                condition_tableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(condition_table);

        Delete_btn2.setText("Delete");
        Delete_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_btn2Delete_Clicked(evt);
            }
        });

        Update_btn2.setText("Update");
        Update_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_btn2ActionPerformed(evt);
            }
        });

        insert_Btn2.setText("Refresh table ");
        insert_Btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_Btn2ActionPerformed(evt);
            }
        });

        save_btn3.setText("Save ");
        save_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btn3ActionPerformed(evt);
            }
        });

        date_status2.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(condition_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Pat_Id3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Pat_Name2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel28)
                                        .addGap(24, 24, 24)
                                        .addComponent(condition, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel29)
                                                .addGap(24, 24, 24)
                                                .addComponent(cond_onset_date, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel30)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(condition_chronic, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(49, 49, 49)
                                        .addComponent(jLabel31)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date_status2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(save_btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(insert_Btn2)
                                .addGap(18, 18, 18)
                                .addComponent(Update_btn2)
                                .addGap(37, 37, 37)
                                .addComponent(Delete_btn2)))))
                .addContainerGap(345, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(condition_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pat_Id3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pat_Name2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(condition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cond_onset_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date_status2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(condition_chronic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_btn3)
                    .addComponent(insert_Btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update_btn2)
                    .addComponent(Delete_btn2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(217, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Condition", jPanel5);

        jLabel32.setText("Title:");

        cp_title.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr", "Ms", "M.", "Dr" }));
        cp_title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cp_titleActionPerformed(evt);
            }
        });

        jLabel34.setText("Last Name :  ");

        cp_Last_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cp_Last_NameActionPerformed(evt);
            }
        });

        cp_First_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cp_First_NameActionPerformed(evt);
            }
        });

        jLabel36.setText("First Name :  ");

        jPanel8.setName("Contact and Address"); // NOI18N

        jLabel41.setText("Phone Number :");

        cp_phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cp_phoneActionPerformed(evt);
            }
        });

        jLabel42.setText("E-Mail: ");

        cp_email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cp_emailMouseExited(evt);
            }
        });
        cp_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cp_emailActionPerformed(evt);
            }
        });

        email_status1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel41)
                        .addGap(18, 18, 18)
                        .addComponent(cp_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(email_status1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cp_email, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(227, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(cp_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(cp_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(email_status1, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
        );

        save_btn2.setText("Save ");
        save_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btn2ActionPerformed(evt);
            }
        });

        insert_Btn1.setText("Refresh table ");
        insert_Btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_Btn1ActionPerformed(evt);
            }
        });

        Update_btn1.setText("Update");
        Update_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_btn1ActionPerformed(evt);
            }
        });

        cp_Id.setEditable(false);

        Delete_btn1.setText("Delete");
        Delete_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_btn1Delete_Clicked(evt);
            }
        });

        cp_speciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cp_specialityActionPerformed(evt);
            }
        });

        jLabel43.setText("Speciality  : ");

        cp_table.setForeground(new java.awt.Color(0, 51, 153));
        cp_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        cp_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cp_tableMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(cp_table);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel32)
                        .addGap(37, 37, 37)
                        .addComponent(cp_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(cp_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(save_btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(insert_Btn1)
                        .addGap(18, 18, 18)
                        .addComponent(Update_btn1)
                        .addGap(37, 37, 37)
                        .addComponent(Delete_btn1))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cp_First_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cp_Last_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addGap(10, 10, 10)
                                .addComponent(cp_speciality, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 919, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(cp_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(cp_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(cp_Last_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cp_First_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(cp_speciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save_btn2)
                            .addComponent(insert_Btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Update_btn1)
                            .addComponent(Delete_btn1))))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1231, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 60, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 61, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 781, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Primary Care Provider", jPanel6);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Logout...");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Blood Details");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleActionPerformed

    private void Last_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Last_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Last_NameActionPerformed

    private void First_Name1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_First_Name1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_First_Name1ActionPerformed

    private void Date_Of_BirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Date_Of_BirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Date_Of_BirthActionPerformed

    private void Address_CityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Address_CityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Address_CityActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void Address_ZipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Address_ZipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Address_ZipActionPerformed

    private void PhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneActionPerformed

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailActionPerformed

    private void blood_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blood_TypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blood_TypeActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        org_donor = "No";
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
    
        
         connectDb();
         
        String sql1 = "INSERT INTO Patient (Patient_Gender,Patient_Title,Patient_FirstName,Patient_LastName, Patient_DOB,Patient_Street,Patient_City,Patient_State,Patient_Zip,Patient_Phone,Patient_Email, image) values (?,?,?,?,?,?,?,?,?,?,?,?)";
        
         try{
            pst = conn.prepareStatement(sql1);
            pst.setString(1, gender);
           pst.setString(2, title.getSelectedItem().toString());
           pst.setString(3, First_Name1.getText());
           pst.setString(4, Last_Name.getText());
           pst.setString(5, Date_Of_Birth.getText());
           pst.setString(6, Address_Street.getText());
           pst.setString(7, Address_City.getText());
           pst.setString(8, jComboBox2.getSelectedItem().toString());
           pst.setInt(9, 73139);
           pst.setString(10, Phone.getText());
           pst.setString(11, Email.getText());
           pst.setBytes(12, person_image);
            
            pst.execute();
            pst.close();
            
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }  
         
                
        //*******************************************************
		//display data from the table patient to the jtable
          Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt1 = conn.createStatement();
    ResultSet rs = stmt1.executeQuery("SELECT Patient_Id,Patient_FirstName,Patient_LastName,Patient_DOB,Patient_Street,Patient_City,Patient_State,Patient_Zip,Patient_Phone,image FROM Patient");

    // get columns info
    ResultSetMetaData rsmd = rs.getMetaData();
    int columnCount = rsmd.getColumnCount();

    // for changing column and row model
    DefaultTableModel tm = (DefaultTableModel) pat_Table.getModel();

    // clear existing columns 
    tm.setColumnCount(0);

    // add specified columns to table
    for (int i = 1; i <= columnCount; i++ ) {
        tm.addColumn(rsmd.getColumnName(i));
    }   

    // clear existing rows
    tm.setRowCount(0);

    // add rows to table
    while (rs.next()) {
    String[] a = new String[columnCount];
    for(int i = 0; i < columnCount; i++) {
        a[i] = rs.getString(i+1);
    }
    tm.addRow(a);
}
    tm.fireTableDataChanged();

    rs.close();
    stmt1.close();
} catch (Exception ex) { 
    JOptionPane.showMessageDialog(this, ex, ex.getMessage(), WIDTH, null);
}
         //*******************************************************
      /* // pst.close();
          stmt.close();
          c.commit();
          c.close();
        } catch ( Exception e ) {
          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
          System.exit(0);
        }
        System.out.println("Records created successfully");
        */
	// clear fields 	
	First_Name1.setText("");
        Last_Name.setText("");
        Date_Of_Birth.setText("");
        Address_Street.setText("");
        Address_Street.setText("");
        Address_City.setText("");
        Phone.setText("");
        Email.setText("");  
        Address_Zip.setText("");
        Pat_Id.setText("");
     
        
    }//GEN-LAST:event_save_btnActionPerformed

    private void insert_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_BtnActionPerformed
           refresh_table(pat_Table, "Patient");
    }//GEN-LAST:event_insert_BtnActionPerformed

    private void pat_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pat_TableMouseClicked
      
             
     // fill the fiels when clicked   
        try{
			 System.out.println("Row selected");
            int row = pat_Table.getSelectedRow();
            //String table_Click = (pat_Table.getModel().getValueAt(row, 1).toString());
            Pat_Id.setText(pat_Table.getModel().getValueAt(row, 0).toString());
            First_Name1.setText(pat_Table.getModel().getValueAt(row, 3).toString());
			//First_Name1.setText("");
			Last_Name.setText(pat_Table.getModel().getValueAt(row, 4).toString());
			Date_Of_Birth.setText(pat_Table.getModel().getValueAt(row, 5).toString());
			Address_Street.setText(pat_Table.getModel().getValueAt(row, 6).toString());
			//Address_Street.setText("");
			Address_City.setText(pat_Table.getModel().getValueAt(row, 7).toString());
			Address_Zip.setText(pat_Table.getModel().getValueAt(row, 9).toString());
			Phone.setText(pat_Table.getModel().getValueAt(row, 10).toString());
			Email.setText(pat_Table.getModel().getValueAt(row, 11).toString());
            
        }
        catch(Exception e){
            //JOptionPane.showMessageDialog(null, "Refresh the table please");
        }
        
        
        // show the image when clicked
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            int row = pat_Table.getSelectedRow();
    Statement stmt = conn.createStatement();
    String query = "select image from Patient where Patient_Id = "+pat_Table.getModel().getValueAt(row, 0).toString()+";";
    //JOptionPane.showMessageDialog(null, "Data Deleted");
    System.out.println(query);
    //refresh_Table();
    ResultSet rs = stmt.executeQuery(query);
    //refresh_Table();
    
    if(rs.next()){
        byte[] imageData = rs.getBytes("image");
        format = new ImageIcon(imageData);
        image.setIcon(format);
    }
    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
   
    }//GEN-LAST:event_pat_TableMouseClicked

    private void pat_TableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pat_TableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pat_TableMouseEntered

    private void Update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_btnActionPerformed
        if(Pat_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "UPDATE Patient set Patient_Phone = '"+Phone.getText().toString()+
                                   "' ,Patient_Title = '"+title.getSelectedItem().toString()+
                                   "' ,Patient_Gender = '"+gender+
                                   "' ,Patient_FirstName = '"+First_Name1.getText().toString()+
                                   "' ,Patient_LastName = '"+Last_Name.getText().toString()+
                                   "' ,Patient_DOB = '"+Date_Of_Birth.getText().toString()+
                                   "' ,Patient_Street = '"+Address_Street.getText().toString()+
                                   "' ,Patient_City = '"+Address_City.getText().toString()+
                                   "' ,Patient_State = '"+jComboBox2.getSelectedItem().toString()+
                                   "' ,Patient_Email = '"+Email.getText().toString()+
                                   "' ,Patient_Zip = '"+Integer.parseInt(Address_Zip.getText())+ 
                                   "' where Patient_Id = "+Pat_Id.getText()+";";
    System.out.println(query);
    JOptionPane.showMessageDialog(null, "Data Updated");
    ResultSet rs = stmt.executeQuery(query);
    refresh_table(pat_Table, "Patient");
    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }//GEN-LAST:event_Update_btnActionPerformed

    }
    private void Delete_Clicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Clicked
        int p = JOptionPane.showConfirmDialog(null, "Do you really want to delete the data?", "Delete confirmation",JOptionPane.YES_NO_OPTION);
        if(p == 0){
        if(Pat_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "DELETE FROM Patient where Patient_Id = "+Pat_Id.getText()+";";
    JOptionPane.showMessageDialog(null, "Data Deleted");
    System.out.println(query);
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);
    refresh_Table();
    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }                   
           
                       
    }//GEN-LAST:event_Delete_Clicked
   }
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        gender = "Male";
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        gender = "Female";
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void Pat_Id1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pat_Id1ActionPerformed
        Pat_Name.setText(Pat_Id1.getSelectedItem().toString());
        Connection conn = null;
        try{
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
            String sql = "select Patient_LastName from patient where Patient_Id = "+Pat_Id1.getSelectedItem()+";";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            while(rs.next()){
               Pat_Name.setText(rs.getString("Patient_LastName"));
            }
            stmt.close();
            rs.close();
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null, e); 
        }
    }//GEN-LAST:event_Pat_Id1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        org_donor = "Yes";
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        hiv_status = "Positive";
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        hiv_status = "Negative";
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void save_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btn1ActionPerformed
        
        if((hiv_status == "Positive")&& (org_donor == "Yes")){
            JOptionPane.showMessageDialog(null, "The Patient "+Pat_Name.getText()+" can't be an organ donnor(check the HIV status)");
        }else{
        Connection c = null;
         connectDb();
        System.out.println("Opened database successfully");
        Statement stmt = null;
        try {
          Class.forName("org.sqlite.JDBC");
          c = DriverManager.getConnection(path_db);
          c.setAutoCommit(false);
          //System.out.println("Opened database successfully");
 
          stmt = c.createStatement();
           String sql = "INSERT INTO Details (Patient_Id,Patient_Name,Blood_Type,Organ_Donor,\n"+
"HIV_Status,Heidht,Width) VALUES("+Pat_Id1.getSelectedItem().toString()+",'"+Pat_Name.getText()+"','"+blood_Type.getSelectedItem()+" ','"+org_donor+"','"+hiv_status+"',"+height.getText()+","+weight.getText()+");";
		System.err.println(sql);
                stmt.executeUpdate(sql);
                
          stmt.close();
          c.commit();
          c.close();
        } catch ( Exception e ) {
          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
          System.exit(0);
        }
        //  update the table 
     refresh_table(details_table, "Details");
        
	// clear fields 
     }
        
    }//GEN-LAST:event_save_btn1ActionPerformed

    private void details_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_details_tableMouseClicked
         try{
			 System.out.println("Row selected");
            int row = details_table.getSelectedRow();
            //String table_Click = (pat_Table.getModel().getValueAt(row, 1).toString());
            Details_Id.setText(details_table.getModel().getValueAt(row, 0).toString());
           // First_Name1.setText(details_table.getModel().getValueAt(row, 1).toString());
			//First_Name1.setText("");
			Pat_Name.setText(details_table.getModel().getValueAt(row, 2).toString());
			//Date_Of_Birth.setText(details_table.getModel().getValueAt(row, 3).toString());
			//Address_Street.setText(details_table.getModel().getValueAt(row, 4).toString());
			//Address_Street.setText("");
			height.setText(details_table.getModel().getValueAt(row, 6).toString());
			weight.setText(details_table.getModel().getValueAt(row, 7).toString());
			
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Refresh the table please");
        }                  
    }//GEN-LAST:event_details_tableMouseClicked

    private void update_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btn1ActionPerformed
        if(Details_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "UPDATE Details set Blood_Type = '"+blood_Type.getSelectedItem().toString()+
                                   "' ,Organ_Donor = '"+org_donor+
                                   "' ,HIV_Status = '"+hiv_status+
                                   "' ,Heidht = '"+height.getText().toString()+
                                   "' ,Width = '"+weight.getText().toString()+
                                   "' where Details_Id = "+Details_Id.getText()+";";
    System.out.println(query);
    JOptionPane.showMessageDialog(null, "Data Updated");
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);

    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }                                          

    }//GEN-LAST:event_update_btn1ActionPerformed

    private void refresh_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_btn1ActionPerformed
        refresh_table(details_table, "Details");
    }//GEN-LAST:event_refresh_btn1ActionPerformed

    private void delete_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_BtnActionPerformed
        int p = JOptionPane.showConfirmDialog(null, "Do you really want to delete the data?", "Delete confirmation",JOptionPane.YES_NO_OPTION);
        if(p == 0){ 
        if(Details_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "DELETE FROM Details where Details_Id = "+Details_Id.getText()+";";
    JOptionPane.showMessageDialog(null, "Data Deleted");
    System.out.println(query);
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);
    refresh_Table();
    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }
    }//GEN-LAST:event_delete_BtnActionPerformed
  }
    
    private void Pat_Id2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pat_Id2ActionPerformed
        Pat_Name1.setText(Pat_Id2.getSelectedItem().toString());
        Connection conn = null;
        try{
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
            String sql = "select Patient_LastName from patient where Patient_Id = "+Pat_Id2.getSelectedItem()+";";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            while(rs.next()){
               Pat_Name1.setText(rs.getString("Patient_LastName"));
            }
            stmt.close();
            rs.close();
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null, e); 
        }
    }//GEN-LAST:event_Pat_Id2ActionPerformed

    private void Pat_Id3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pat_Id3ActionPerformed
       // Pat_Name2.setText(Pat_Id3.getSelectedItem().toString());
        Connection conn = null;
        try{
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
            String sql = "select Patient_LastName from patient where Patient_Id = "+Pat_Id3.getSelectedItem()+";";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            while(rs.next()){
               Pat_Name2.setText(rs.getString("Patient_LastName"));
            }
            stmt.close();
            rs.close();
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null, e); 
        }
    }//GEN-LAST:event_Pat_Id3ActionPerformed

    private void cp_titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cp_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cp_titleActionPerformed

    private void cp_Last_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cp_Last_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cp_Last_NameActionPerformed

    private void cp_First_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cp_First_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cp_First_NameActionPerformed

    private void cp_phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cp_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cp_phoneActionPerformed

    private void cp_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cp_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cp_emailActionPerformed

    private void save_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btn2ActionPerformed
         Connection c = null;
    connectDb();
    System.out.println("Opened database successfully");
        
        Statement stmt = null;
        try {
          Class.forName("org.sqlite.JDBC");
          c = DriverManager.getConnection(path_db);
          c.setAutoCommit(false);
          System.out.println("Opened database successfully");
 
          stmt = c.createStatement();
           String sql = "INSERT INTO Care_Provider (cp_title,cp_First_Name,cp_Last_Name,cp_speciality,\n"+
"cp_phone,cp_email)"+"VALUES('"+cp_title.getSelectedItem().toString()+"','"+cp_First_Name.getText()+" ','"+cp_Last_Name.getText()+"','"+cp_speciality.getText()+"','"+cp_phone.getText()+"','"+cp_email.getText()+"');";
		System.err.println(sql);
                stmt.executeUpdate(sql);
        
          stmt.close();
          c.commit();
          c.close();
        } catch ( Exception e ) {
          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
          System.exit(0);
        }
        System.out.println("Records created successfully");
        	//display data from the table patient to the jtable
         refresh_table(cp_table, "Care_Provider");
        
	// clear fields
    }//GEN-LAST:event_save_btn2ActionPerformed

    private void insert_Btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_Btn1ActionPerformed
         refresh_table(cp_table, "Care_Provider");
    }//GEN-LAST:event_insert_Btn1ActionPerformed

    private void Update_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_btn1ActionPerformed
         if(cp_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        connectDb();
        try {
    Statement stmt = conn.createStatement();
    String query = "UPDATE Care_Provider set cp_title = '"+cp_title.getSelectedItem().toString()+
                                   "' ,cp_First_Name = '"+cp_First_Name.getText()+
                                   "' ,cp_Last_Name = '"+cp_Last_Name.getText()+
                                   "' ,cp_speciality = '"+cp_speciality.getText()+
                                   "' ,cp_phone = '"+cp_phone.getText()+
                                   "' ,cp_email = '"+cp_email.getText()+
                                   "' where cp_Id = "+cp_Id.getText()+";";
    System.out.println(query);
    JOptionPane.showMessageDialog(null, "Data Updated");
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);

    rs.close();
    stmt.close();
    refresh_table(pat_Table, "Patient");
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }               
    }//GEN-LAST:event_Update_btn1ActionPerformed

    private void Delete_btn1Delete_Clicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_btn1Delete_Clicked
        int p = JOptionPane.showConfirmDialog(null, "Do you really want to delete the data?", "Delete confirmation",JOptionPane.YES_NO_OPTION);
        if(p == 0){ 
        if(cp_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "DELETE FROM Care_Provider where cp_Id = "+cp_Id.getText()+";";
    JOptionPane.showMessageDialog(null, "Data Deleted");
    System.out.println(query);
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);
    refresh_Table();
    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }
    }
    }//GEN-LAST:event_Delete_btn1Delete_Clicked

    private void cp_specialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cp_specialityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cp_specialityActionPerformed

    private void Delete_btn2Delete_Clicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_btn2Delete_Clicked
        int p = JOptionPane.showConfirmDialog(null, "Do you really want to delete the data?", "Delete confirmation",JOptionPane.YES_NO_OPTION);
        if(p == 0){  
        if(condition_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "DELETE FROM condition where condition_Id = "+condition_Id.getText()+";";
    JOptionPane.showMessageDialog(null, "Data Deleted");
    System.out.println(query);
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);
    refresh_Table();
    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }
    }
    }//GEN-LAST:event_Delete_btn2Delete_Clicked

    private void Update_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_btn2ActionPerformed
        if(condition_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "UPDATE condition set condition = '"+condition.getText().toString()+
                                   "' ,cond_onset_date = '"+cond_onset_date.getText()+
                                   "' ,condition_chronic = '"+condition_chronic.getText()+
                                   "' ,condition_note = '"+condition_note.getText().toString()+
                                   "' where condition_Id = "+condition_Id.getText()+";";
    System.out.println(query);
    JOptionPane.showMessageDialog(null, "Data Updated");
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);

    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }               
    }//GEN-LAST:event_Update_btn2ActionPerformed

    private void insert_Btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_Btn2ActionPerformed
       refresh_table(condition_table, "condition");
    }//GEN-LAST:event_insert_Btn2ActionPerformed

    private void save_btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btn3ActionPerformed
        Connection c = null;
         connectDb();
        System.out.println("Opened database successfully");
        Statement stmt = null;
        try {
          Class.forName("org.sqlite.JDBC");
          c = DriverManager.getConnection(path_db);
          c.setAutoCommit(false);
          //System.out.println("Opened database successfully");
 
          stmt = c.createStatement();
           String sql = "INSERT INTO condition (condition,cond_onset_date,condition_chronic,condition_note,\n"+
"Patient_Id) VALUES('"+condition.getText().toString()+"','"+cond_onset_date.getText()+"','"+condition_chronic.getText()+" ','"+condition_note.getText()+"',"+Pat_Id3.getSelectedItem().toString()+");";
		System.err.println(sql);
                stmt.executeUpdate(sql);
                
          stmt.close();
          c.commit();
          c.close();
        } catch ( Exception e ) {
          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
          System.exit(0);
        }
        //  update the table 
    refresh_table(condition_table, "condition");
        
	// clear fields
    }//GEN-LAST:event_save_btn3ActionPerformed

    private void Delete_btn3Delete_Clicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_btn3Delete_Clicked
        int p = JOptionPane.showConfirmDialog(null, "Do you really want to delete the data?", "Delete confirmation",JOptionPane.YES_NO_OPTION);
        if(p == 0){ 
        if(Medication_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "DELETE FROM Medication where Medication_Id = "+Medication_Id.getText()+";";
    JOptionPane.showMessageDialog(null, "Data Deleted");
    System.out.println(query);
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);
    refresh_Table();
    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }
    }
    }//GEN-LAST:event_Delete_btn3Delete_Clicked

    private void Update_btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_btn3ActionPerformed
        if(Medication_Id.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Please select a row in the table"); 
        }else{
            
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
    String query = "UPDATE Medication set medication = '"+medication.getText().toString()+
                                   "' ,medication_date = '"+medication_date.getText()+
                                   "' ,medication_chronic = '"+medication_chronic.getText()+
                                   "' ,medication_note = '"+medication_note.getText().toString()+
                                   "' where Medication_Id = "+Medication_Id.getText()+";";
    System.out.println(query);
    JOptionPane.showMessageDialog(null, "Data Updated");
    refresh_Table();
    ResultSet rs = stmt.executeQuery(query);

    rs.close();
    stmt.close();
} catch (Exception ex) { 
    //JOptionPane.showMessageDialog(null, "Update Failed");
}
    }               
    }//GEN-LAST:event_Update_btn3ActionPerformed

    private void insert_Btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_Btn3ActionPerformed
        refresh_table(medication_table, "Medication");
    }//GEN-LAST:event_insert_Btn3ActionPerformed

    private void save_btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btn4ActionPerformed
         Connection c = null;
         connectDb(); 
        System.out.println("Opened database successfully");
        Statement stmt = null;
        try {
          Class.forName("org.sqlite.JDBC");
          c = DriverManager.getConnection(path_db);
          c.setAutoCommit(false);
          //System.out.println("Opened database successfully");
 
          stmt = c.createStatement();
           String sql = "INSERT INTO Medication (Patient_Id,medication,medication_date,medication_chronic,\n"+
"medication_note) VALUES("+Pat_Id2.getSelectedItem().toString()+",'"+medication.getText()+"','"+medication_date.getText()+" ','"+medication_chronic.getText()+"','"+medication_note.getText()+"');";
		System.err.println(sql);
                stmt.executeUpdate(sql);
       
          stmt.close();
          c.commit();
          c.close();
        } catch ( Exception e ) {
          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
          System.exit(0);
        }
        //  update the table 
     refresh_table(medication_table, "Medication");
        
        
	// clear fields 
    }//GEN-LAST:event_save_btn4ActionPerformed

    private void medication_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medication_tableMouseClicked
        try{
			 System.out.println("Row selected");
            int row = medication_table.getSelectedRow();
            //String table_Click = (pat_Table.getModel().getValueAt(row, 1).toString());
            Medication_Id.setText(medication_table.getModel().getValueAt(row, 0).toString());
            medication.setText(medication_table.getModel().getValueAt(row, 2).toString());
			//First_Name1.setText("");
			medication_date.setText(medication_table.getModel().getValueAt(row, 3).toString());
			medication_chronic.setText(medication_table.getModel().getValueAt(row, 4).toString());
			medication_note.setText(medication_table.getModel().getValueAt(row, 5).toString());
			//Address_Street.setText("");
			//height.setText(details_table.getModel().getValueAt(row, 6).toString());
			//weight.setText(details_table.getModel().getValueAt(row, 7).toString());
			
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Refresh the table please");
        }            
    }//GEN-LAST:event_medication_tableMouseClicked

    private void condition_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_condition_tableMouseClicked
        try{
			 System.out.println("Row selected");
            int row = condition_table.getSelectedRow();
            //String table_Click = (pat_Table.getModel().getValueAt(row, 1).toString());
            condition_Id.setText(condition_table.getModel().getValueAt(row, 0).toString());
            condition.setText(condition_table.getModel().getValueAt(row, 1).toString());
			//First_Name1.setText("");
			cond_onset_date.setText(condition_table.getModel().getValueAt(row, 2).toString());
			condition_chronic.setText(condition_table.getModel().getValueAt(row, 3).toString());
			condition_note.setText(condition_table.getModel().getValueAt(row, 4).toString());
			//Address_Street.setText("");
			//height.setText(condition_table.getModel().getValueAt(row, 6).toString());
			//weight.setText(details_table.getModel().getValueAt(row, 7).toString());
			
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Refresh the table please");
        }            
    }//GEN-LAST:event_condition_tableMouseClicked

    private void cp_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cp_tableMouseClicked
        try{
            int row = cp_table.getSelectedRow();
            //String table_Click = (pat_Table.getModel().getValueAt(row, 1).toString());
            cp_Id.setText(cp_table.getModel().getValueAt(row, 0).toString());
            cp_First_Name.setText(cp_table.getModel().getValueAt(row, 2).toString());
			//First_Name1.setText("");
			cp_Last_Name.setText(cp_table.getModel().getValueAt(row, 3).toString());
			cp_speciality.setText(cp_table.getModel().getValueAt(row, 4).toString());
			cp_phone.setText(cp_table.getModel().getValueAt(row, 5).toString());
			//Address_Street.setText("");
			cp_email.setText(cp_table.getModel().getValueAt(row, 6).toString());
			//weight.setText(details_table.getModel().getValueAt(row, 7).toString());
			
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Refresh the table please");
        }           
    }//GEN-LAST:event_cp_tableMouseClicked

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        try{
            String sql ="select * from Patient where Patient_LastName = ?";
            
        }catch(Exception e){
            
        }
  
    }//GEN-LAST:event_txt_searchKeyReleased

    private void picture_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picture_btnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        fileName = f.getAbsolutePath();
        image_path.setText(fileName);
        format = new ImageIcon(fileName);
        image.setIcon(format);
        try{
            File image = new File(fileName);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buff = new byte[1024];
            
            for(int readNum; (readNum = fis.read(buff)) != -1; ){
                bos.write(buff, 0, readNum);
                
            }
            
            person_image = bos.toByteArray();
        }catch(Exception e ){
            
        }
        
    }//GEN-LAST:event_picture_btnActionPerformed

    private void logout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout
        dispose();
        new Login().setVisible(true);
       
        
    }//GEN-LAST:event_logout

    private void EmailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmailMouseExited
        EmailValidator emailValidator = new EmailValidator();
        if(!emailValidator.validate(Email.getText().trim())) {
        email_status.setText("Invalid email address!!");
        email = false;
        }else {
            email_status.setText("");
            email = true;
        }
    }//GEN-LAST:event_EmailMouseExited

    private void Date_Of_BirthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Date_Of_BirthMouseClicked
        Date_Of_Birth.setText("");
    }//GEN-LAST:event_Date_Of_BirthMouseClicked

    private void Date_Of_BirthMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Date_Of_BirthMouseExited
        if(!isValidDate(Date_Of_Birth.getText(),"dd-MM-yyyy")){
            date_status.setText("Invalid Date format: dd-mm-yyyy");
            date = false;
        }
        else{
            date_status.setText("");
            date = true;
        }
    }//GEN-LAST:event_Date_Of_BirthMouseExited

    private void cp_emailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cp_emailMouseExited
        EmailValidator emailValidator = new EmailValidator();
        if(!emailValidator.validate(cp_email.getText().trim())) {
        email_status1.setText("Invalid email address!!");
        email = false;
        }else {
            email_status1.setText("");
            email = true;
        }
    }//GEN-LAST:event_cp_emailMouseExited

    private void medication_dateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medication_dateMouseClicked
        medication_date.setText("");
    }//GEN-LAST:event_medication_dateMouseClicked

    private void medication_dateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medication_dateMouseExited
        if(!isValidDate(medication_date.getText(),"dd-MM-yyyy")){
            date_status1.setText("Invalid Date format: dd-mm-yyyy");
            date = false;
        }
        else{
            date_status1.setText("");
            date = true;
        }
    }//GEN-LAST:event_medication_dateMouseExited

    private void cond_onset_dateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cond_onset_dateMouseClicked
        cond_onset_date.setText("");
    }//GEN-LAST:event_cond_onset_dateMouseClicked

    private void cond_onset_dateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cond_onset_dateMouseExited
        if(!isValidDate(cond_onset_date.getText(),"dd-MM-yyyy")){
            date_status2.setText("Invalid Date format: dd-mm-yyyy");
            date = false;
        }
        else{
            date_status2.setText("");
            date = true;
        }
    }//GEN-LAST:event_cond_onset_dateMouseExited

    
    
    public static DefaultTableModel buildTableModel(ResultSet rs)
        throws SQLException {

    ResultSetMetaData metaData = rs.getMetaData();

    // names of columns
    Vector<String> columnNames = new Vector<String>();
    int columnCount = metaData.getColumnCount();
    for (int column = 1; column <= columnCount; column++) {
        columnNames.add(metaData.getColumnName(column));
    }

    // data of the table
    Vector<Vector<Object>> data = new Vector<Vector<Object>>();
    while (rs.next()) {
        Vector<Object> vector = new Vector<Object>();
        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
            vector.add(rs.getObject(columnIndex));
        }
        data.add(vector);
    }

    return new DefaultTableModel(data, columnNames);

}
    
    public void resultSetToTableModel(ResultSet rs, JTable table) throws SQLException{
        //Create new table model
        DefaultTableModel tableModel = new DefaultTableModel();

        //Retrieve meta data from ResultSet
        ResultSetMetaData metaData = rs.getMetaData();

        //Get number of columns from meta data
        int columnCount = metaData.getColumnCount();

        //Get all column names from meta data and add columns to table model
        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++){
            tableModel.addColumn(metaData.getColumnLabel(columnIndex));
        }

        //Create array of Objects with size of column count from meta data
        Object[] row = new Object[columnCount];

        //Scroll through result set
        while (rs.next()){
            //Get object from column with specific index of result set to array of objects
            for (int i = 0; i < columnCount; i++){
                row[i] = rs.getObject(i+1);
            }
            //Now add row to table model with that array of objects as an argument
            tableModel.addRow(row);
        }

        //Now add that table model to your table and you are done :D
        table.setModel(tableModel);
    }
    public void refresh_Table(){
        Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
     ResultSet rs = stmt.executeQuery("SELECT Patient_Id,Patient_FirstName,Patient_LastName,Patient_DOB,Patient_Street,Patient_City,Patient_State,Patient_Zip,Patient_Phone FROM Patient");


    // get columns info
    ResultSetMetaData rsmd = rs.getMetaData();
    int columnCount = rsmd.getColumnCount();

    // for changing column and row model
    DefaultTableModel tm = (DefaultTableModel) pat_Table.getModel();

    // clear existing columns 
    tm.setColumnCount(0);

    // add specified columns to table
    for (int i = 1; i <= columnCount; i++ ) {
        tm.addColumn(rsmd.getColumnName(i));
    }   

    // clear existing rows
    tm.setRowCount(0);

    // add rows to table
    while (rs.next()) {
    String[] a = new String[columnCount];
    for(int i = 0; i < columnCount; i++) {
        a[i] = rs.getString(i+1);
    }
    tm.addRow(a);
}
    tm.fireTableDataChanged();

    rs.close();
    stmt.close();
} catch (Exception ex) { 
    JOptionPane.showMessageDialog(this, ex, ex.getMessage(), WIDTH, null);
}
    // clear the fields 
		First_Name1.setText("");
        Last_Name.setText("");
        Date_Of_Birth.setText("");
        Address_Street.setText("");
        Address_Street.setText("");
        Address_City.setText("");
        Phone.setText("");
        Email.setText("");  
        Address_Zip.setText("");
        Pat_Id.setText("");
        
    }
    
    private void fillConboPatId(String table_Name,String field_Name, JComboBox combo_Name){
        Connection conn = null;
        try{
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
            String sql = "select * from "+table_Name+";";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            while (rs.next()) {
                String item = rs.getString(field_Name);
                combo_Name.addItem(item);
                
            }
            rs.close();
            stmt.close();
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null, e); 
        }
    }
    
    private static final class JPhoneNumberFormattedTextField extends JFormattedTextField{

        private static final long serialVersionUID = 8997075146338662662L;

        public JPhoneNumberFormattedTextField() throws ParseException{
            super(new MaskFormatter("(###) ###-####"));
            setColumns(8);
        }

    }
    
    public void connectDb(){
        try{
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
           
       }catch(Exception e){
          JOptionPane.showMessageDialog(null, e);
       }  
    }
    public static boolean isValidDate(String date, String format) {
	    try {
	      SimpleDateFormat sdf = new SimpleDateFormat(format);
	      sdf.setLenient(false);
	      sdf.parse(date);
	    }
	    catch (ParseException e) {
	      return false;
	    }
	    catch (IllegalArgumentException e) {
	      return false;
	    }
	    return true;
    }
    
    private void refresh_table(JTable t, String table){
         Connection conn = null;
        try {
            Class.forName("org.sqlite.JDBC");
            conn  = DriverManager.getConnection(path_db);
        } catch (Exception ex) {
            Logger.getLogger(Main_Windows.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    Statement stmt = conn.createStatement();
     ResultSet rs = stmt.executeQuery("SELECT * FROM "+table+";");


    // get columns info
    ResultSetMetaData rsmd = rs.getMetaData();
    int columnCount = rsmd.getColumnCount();

    // for changing column and row model
    DefaultTableModel tm = (DefaultTableModel) t.getModel();

    // clear existing columns 
    tm.setColumnCount(0);

    // add specified columns to table
    for (int i = 1; i <= columnCount; i++ ) {
        tm.addColumn(rsmd.getColumnName(i));
    }   

    // clear existing rows
    tm.setRowCount(0);

    // add rows to table
    while (rs.next()) {
    String[] a = new String[columnCount];
    for(int i = 0; i < columnCount; i++) {
        a[i] = rs.getString(i+1);
    }
    tm.addRow(a);
}
    tm.fireTableDataChanged();

    rs.close();
    stmt.close();
} catch (Exception ex) { 
    JOptionPane.showMessageDialog(this, ex, ex.getMessage(), WIDTH, null);
}
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Windows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Windows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Windows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Windows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Windows().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address_City;
    private javax.swing.JTextArea Address_Street;
    private javax.swing.JTextField Address_Zip;
    private javax.swing.JTextField Date_Of_Birth;
    private javax.swing.JButton Delete_btn;
    private javax.swing.JButton Delete_btn1;
    private javax.swing.JButton Delete_btn2;
    private javax.swing.JButton Delete_btn3;
    private javax.swing.JTextField Details_Id;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField First_Name1;
    private javax.swing.JTextField Last_Name;
    private javax.swing.JTextField Medication_Id;
    private javax.swing.JTextField Pat_Id;
    private javax.swing.JComboBox<String> Pat_Id1;
    private javax.swing.JComboBox<String> Pat_Id2;
    private javax.swing.JComboBox<String> Pat_Id3;
    private javax.swing.JTextField Pat_Name;
    private javax.swing.JTextField Pat_Name1;
    private javax.swing.JTextField Pat_Name2;
    private javax.swing.JTextField Phone;
    private javax.swing.JButton Update_btn;
    private javax.swing.JButton Update_btn1;
    private javax.swing.JButton Update_btn2;
    private javax.swing.JButton Update_btn3;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JComboBox<String> blood_Type;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField cond_onset_date;
    private javax.swing.JTextField condition;
    private javax.swing.JTextField condition_Id;
    private javax.swing.JTextField condition_chronic;
    private javax.swing.JTextArea condition_note;
    private javax.swing.JTable condition_table;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JTextField cp_First_Name;
    private javax.swing.JTextField cp_Id;
    private javax.swing.JTextField cp_Last_Name;
    private javax.swing.JTextField cp_email;
    private javax.swing.JTextField cp_phone;
    private javax.swing.JTextField cp_speciality;
    private javax.swing.JTable cp_table;
    private javax.swing.JComboBox<String> cp_title;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JLabel date_status;
    private javax.swing.JLabel date_status1;
    private javax.swing.JLabel date_status2;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JButton delete_Btn;
    private javax.swing.JTable details_table;
    private javax.swing.JMenu editMenu;
    private javax.swing.JLabel email_status;
    private javax.swing.JLabel email_status1;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextField height;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel image;
    private javax.swing.JTextField image_path;
    private javax.swing.JButton insert_Btn;
    private javax.swing.JButton insert_Btn1;
    private javax.swing.JButton insert_Btn2;
    private javax.swing.JButton insert_Btn3;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField medication;
    private javax.swing.JTextField medication_chronic;
    private javax.swing.JTextField medication_date;
    private javax.swing.JTextArea medication_note;
    private javax.swing.JTable medication_table;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JTable pat_Table;
    private javax.swing.JButton picture_btn;
    private javax.swing.JButton refresh_btn1;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton save_btn;
    private javax.swing.JButton save_btn1;
    private javax.swing.JButton save_btn2;
    private javax.swing.JButton save_btn3;
    private javax.swing.JButton save_btn4;
    private javax.swing.JComboBox<String> title;
    private javax.swing.JTextField txt_search;
    private javax.swing.JButton update_btn1;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables
    
    private String gender;
    private String org_donor;
    private String hiv_status;
    
    private ImageIcon format = null;
    String fileName = null;
    int s = 0;
    byte[] person_image = null;
    
    private boolean email = false;
    private boolean date = false;
   
    String path_db = "jdbc:sqlite:C:\\Users\\temp\\Documents\\NetBeansProjects\\gui demo1\\src\\gui\\demo1\\PHCP_DB.sqlite";
}
